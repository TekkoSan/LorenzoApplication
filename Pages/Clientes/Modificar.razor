@page "/clientes/modificar/{Codigo}"
@using LorenzoApplication.Servicio
@inject NavigationManager _navigationManager
@inject IClientesServicio _clientesServicio

<h3>Modificar Articulo</h3>

@if (Mensaje != "")
{
    <div class="alert alert-danger" role="alert">
        @Mensaje
    </div>
}

@if (cliente == null)
{
    <div class="alert alert-warning" role="alert">
        Cargando...
    </div>
}

else
{
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Código</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" @bind-value="@cliente.Codigo" readonly>
        </div>
    </div>

    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Descripción</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" @bind-value="@cliente.Nombre" autofocus>
        </div>
    </div>

    <button class="btn btn-success" @onclick="Aceptar">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
}


@code {
    [Parameter]
    public string Codigo { get; set; } = "";

    private Cliente cliente { get; set; } = null;
    private string Mensaje { get; set; } = "";

    protected override async Task OnParametersSetAsync()
    {
        cliente = await _clientesServicio.Leer(Codigo) ?? new Cliente();
    }


    private async Task Cancelar()
    {
        await Task.Delay(1);
        _navigationManager.NavigateTo("/clientes/index");

    }

    private async Task Aceptar()
    {
        Mensaje = "";

        if (string.IsNullOrEmpty(cliente.Nombre))
        {
            Mensaje = "¡El nombre del cliente esta Incorrecto!";
        }

        if (Mensaje != "") return;

        await _clientesServicio.Modificar(cliente);
        _navigationManager.NavigateTo("/cliente/index");
    }

}
