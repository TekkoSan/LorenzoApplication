@page "/proveedores/agregar"

@inject IProveedoresServicio _proveedoresServicio
@inject NavigationManager _navigationManager
<PageTitle>Agregar proveedores</PageTitle>
<h3>Agregar Proveedor</h3>

@if (Mensaje != "")
{
    <div class="alert alert-danger" role="alert">
        @Mensaje
    </div>
}

<div class="mb-3 row">
    <input class="form-control" type="text" placeholder="Código" @bind-value="@proveedor.Codigo" readonly>
</div>

<div class="mb-3 row">
    <input class="form-control" type="text" placeholder="Nombre" @bind-value="@proveedor.Nombre" autofocus>
</div>

<div class="mb-3 row">
    <input class="form-control" type="text" placeholder="Dirección" @bind-value="@proveedor.Direcc">
</div>

<div class="mb-3 row">
    <input class="form-control" type="text" placeholder="Localidad" @bind-value="@proveedor.Locali">
</div>

<div class="mb-3 row">
    <input class="form-control" type="number" placeholder="Código Postal" @bind-value="@proveedor.CodPos">
</div>

<div class="mb-3 row">
    <input class="form-control" type="text" placeholder="Teléfono" @bind-value="@proveedor.Telefo">
</div>

<div class="mb-3 row">
    <select class="form-select" @onchange="OnChangeTipiva">
        <option value="1">Responsable Inscripto</option>
        <option value="2">Monotributista</option>
        <option value="3">Excento</option>
        <option value="0">No especificado</option>
    </select>
</div>

<div class="mb-3 row">
    <input class="form-control" type="number" placeholder="C.U.I.L" @bind-value="@proveedor.Cuit">
</div>

<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>
<button class="btn btn-secondary" @onclick="Cancelar" >Cancelar</button>

@code {
    private Provee proveedor { get; set; } = new Provee();
    private string Mensaje { get; set; } = "";
    private string TipoImpuesto { get; set; } = "";
    private async Task Cancelar()
    {
        await Task.Delay(1);
        _navigationManager.NavigateTo("/proveedores/index");
    }
    private async Task Aceptar()
    {
        Mensaje = "";

        if (string.IsNullOrEmpty(proveedor.Nombre))
        {
            Mensaje += "No seas pelotudo, ponele nombre.";
        }

        if (Mensaje != "") return;

        await _proveedoresServicio.Agregar(proveedor);
        _navigationManager.NavigateTo("/proveedores/index");
    }
    private async Task OnChangeTipiva(ChangeEventArgs e)
    {
        await Task.Delay(1);
        proveedor.Tipiva = e.Value.ToString();
    }
}